#lang racket/base

(require racket/generator)

#|
Each new term in the Fibonacci sequence is generated by adding
the previous two terms. By starting with 1 and 2, the first
10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose
values do not exceed four million, find the sum of the
even-valued terms.
|#

(define (fib-stream)
  (in-generator
   (define (gen i j)
     (let ([k (+ i j)])
       (yield k)
       (gen j k)))
   (gen 1 1)))

(define (solve [n 4000000])
  (let/ec break
    (for/fold ([sum 0]) ([i (fib-stream)])
      (when (> i n)
        (break sum))
      
      (if (even? i)
          (+ sum i)
          sum))))